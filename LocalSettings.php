<?php
# This file was automatically generated by the MediaWiki 1.22.2
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See includes/DefaultSettings.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# http://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
if ( !defined( 'MEDIAWIKI' ) ) {
	exit;
}

## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

$wgSitename = "gRole";
$wgMetaNamespace = "GRole";

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs
## (like /w/index.php/Page_title to /wiki/Page_title) please see:
## http://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath = "";
$wgScriptExtension = ".php";

## The protocol and server name to use in fully-qualified URLs
$wgServer = "http://grole-wiki.herokuapp.com";

## The relative URL path to the skins directory
$wgStylePath = "$wgScriptPath/skins";

## The relative URL path to the logo.  Make sure you change this from the default,
## or else you'll overwrite your logo when you upgrade!
$wgLogo             = "$wgStylePath/common/images/gRole_dice_logo.png";

## UPO means: this is also a user preference option

$wgEnableEmail = true;
$wgEnableUserEmail = false; # UPO

$wgEmergencyContact = "info@groleplay.com";
$wgPasswordSender = "info@groleplay.com";

$wgEnotifUserTalk = false; # UPO
$wgEnotifWatchlist = false; # UPO
$wgEmailAuthentication = false;

## Database settings
$_wgDBConnectionString = getenv('DATABASE_URL');

$wgDBtype = "postgres";
if (preg_match('%(.*?)://([^:]+):([^@]+)@([^:]+):(\d+)/(.*)%', $_wgDBConnectionString, $regs, PREG_OFFSET_CAPTURE)) {
  $wgDBtype = $regs[1][0];
  $wgDBuser = $regs[2][0];
  $wgDBpassword = $regs[3][0];
  $wgDBserver = $regs[4][0];
  $wgDBport = $regs[5][0];
  $wgDBname = $regs[6][0];
} else {
  die("Failed to parse DB connection string");
}

# Postgres specific settings
$wgDBport = "5432";
$wgDBmwschema = "mediawiki";

## Shared memory settings
$wgMainCacheType = CACHE_NONE;
$wgMemCachedServers = array();

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads = true;
$wgUseImageMagick = false;
$wgImageMagickConvertCommand = "/usr/bin/convert";

# InstantCommons allows wiki to use images from http://commons.wikimedia.org
$wgUseInstantCommons = false;

## If you use ImageMagick (or any other shell command) on a
## Linux server, this will need to be set to the name of an
## available UTF-8 locale
$wgShellLocale = "en_US.utf8";

## If you want to use image uploads under safe mode,
## create the directories images/archive, images/thumb and
## images/temp, and make them all writable. Then uncomment
## this, if it's not already uncommented:
#$wgHashedUploadDirectory = false;

## Set $wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publically accessible from the web.
#$wgCacheDirectory = "$IP/cache";

# Site language code, should be one of the list in ./languages/Names.php
$wgLanguageCode = "es";

$wgSecretKey = getenv('SECRET_KEY');

# Site upgrade key. Must be set to a string (default provided) to turn on the
# web installer while LocalSettings.php is in place
$wgUpgradeKey = getenv('UPGRADE_KEY');

## Default skin: you can change the default skin. Use the internal symbolic
## names, ie 'cologneblue', 'monobook', 'vector':
$wgDefaultSkin = "vector";

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = "https://creativecommons.org/publicdomain/zero/1.0/";
$wgRightsText = "Creative Commons Zero (dominio pÃºblico)";
$wgRightsIcon = "{$wgStylePath}/common/images/cc-0.png";

# Path to the GNU diff3 utility. Used for conflict resolution.
$wgDiff3 = "/usr/bin/diff3";

# The following permissions were set based on your choice in the installer
$wgGroupPermissions['*']['edit'] = false;


# End of automatically generated settings.
# Add more configuration options below.


# **********************
# ***** Extensions *****
# **********************
#
# AWS S3 Storage
require_once("$IP/extensions/AWS/AWS.php");

// Configure AWS credentials
$wgAWSCredentials = array(
    'key' => getenv('AWS_ACCESS_KEY'),
    'secret' => getenv('AWS_SECRET_ACCESS_KEY')
);

$wgAWSRegion = 'external-1';

$wgFileBackends['s3']['containerPaths'] = array(
    'wiki_id-local-public' => 'grole-wiki-public',
    'wiki_id-local-thumb' => 'grole-wiki-thumb',
    'wiki_id-local-deleted' => 'grole-wiki-deleted',
    'wiki_id-local-temp' => 'grole-wiki-temp'
);

// Make MediaWiki use Amazon S3 for file storage.
$wgLocalFileRepo = array (
    'class'             => 'LocalRepo',
    'name'              => 'local',
    'backend'           => 's3',
    'scriptDirUrl'      => $wgScriptPath,
    'scriptExtension'   => $wgScriptExtension,
    'url'               => $wgScriptPath . '/img_auth.php',
    'zones'             => array(
        'public'  => array( 'url' => 'http://grole-wiki-public.s3.amazonaws.com/' ),
        'thumb'   => array( 'url' => 'http://grole-wiki-thumb.s3.amazonaws.com/' ),
        'temp'    => array( 'url' => 'http://grole-wiki-temp.s3.amazonaws.com/' ),
        'deleted' => array( 'url' => 'http://grole-wiki-deleted.s3.amazonaws.com/' )
    )
);

// Make MediaWiki use Amazon SQS for the JobQueue.
// If you only want to use SQS for one job type, switch 'default' with the job type.
// $wgJobTypeConf['default'] = array( 'class' => 'JobQueueAmazonSqs' );
